--- a/net/minecraft/item/ShearsItem.java
+++ b/net/minecraft/item/ShearsItem.java
@@ -8,6 +8,8 @@
 import net.minecraft.tags.BlockTags;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
+import org.bukkit.craftbukkit.v1_15_R1.event.CraftEventFactory;
+import org.bukkit.event.player.PlayerShearEntityEvent;
 
 public class ShearsItem extends Item {
    public ShearsItem(Item.Properties p_i48471_1_) {
@@ -38,4 +40,31 @@
          return 15.0F;
       }
    }
+
+   @SuppressWarnings("deprecation")
+   @Override
+   public boolean func_111207_a(ItemStack stack, net.minecraft.entity.player.PlayerEntity playerIn, LivingEntity entity, net.minecraft.util.Hand hand) {
+      if (entity.field_70170_p.field_72995_K) return false;
+      if (entity instanceof net.minecraftforge.common.IShearable) {
+         net.minecraftforge.common.IShearable target = (net.minecraftforge.common.IShearable)entity;
+         BlockPos pos = new BlockPos(entity.func_226277_ct_(), entity.func_226278_cu_(), entity.func_226281_cx_());
+         if (target.isShearable(stack, entity.field_70170_p, pos)) {
+            // CraftBukkit start
+            if (!CraftEventFactory.handlePlayerShearEntityEvent(playerIn, entity, stack, hand)) {
+               return true;
+            }
+            // CraftBukkit end
+            java.util.List<ItemStack> drops = target.onSheared(stack, entity.field_70170_p, pos,
+                    net.minecraft.enchantment.EnchantmentHelper.func_77506_a(net.minecraft.enchantment.Enchantments.field_185308_t, stack));
+            java.util.Random rand = new java.util.Random();
+            drops.forEach(d -> {
+               net.minecraft.entity.item.ItemEntity ent = entity.func_70099_a(d, 1.0F);
+               ent.func_213317_d(ent.func_213322_ci().func_72441_c((double)((rand.nextFloat() - rand.nextFloat()) * 0.1F), (double)(rand.nextFloat() * 0.05F), (double)((rand.nextFloat() - rand.nextFloat()) * 0.1F)));
+            });
+            stack.func_222118_a(1, entity, e -> e.func_213334_d(hand));
+         }
+         return true;
+      }
+      return false;
+   }
 }
